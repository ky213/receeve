service: receeve

provider:
  name: aws
  runtime: nodejs12.x
  apiGateway:
    minimumCompressionSize: 1024 # Enable gzip compression for responses > 1 KB
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    TABLE_NAME: ${self:service}-${opt:stage, self:provider.stage}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [EmailEventsTable, Arn]

functions:
  emailEvent:
    handler: handler.emailEventHandler
    timeout: 30
    events:
      - http:
          method: post
          path: emailevent

resources:
  Resources:
    EmailEventsTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        TableName: ${self:provider.environment.TABLE_NAME}

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
  localstack:
    debug: true
    stages:
      - local
  # iamRoleStatements:
  #   - Effect: Allow
  #     Action:
  #       - dynamodb:PutItem
  #     Resource: 'arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.TABLE_NAME}'

plugins:
  - serverless-webpack
  - serverless-localstack
